# shellcheck disable=SC2148
# --- Initialized via macOS set-up script ---

# Variables
# ---------
# shellcheck disable=SC2034
ZSH_THEME="spaceship"
ENABLE_CORRECTION="true"


# Environment variables
# ---------------------
export HOMEBREW_NO_ANALYTICS=1 # Turn off Google Analytics collection from Homebrew
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion


# Alias: Files
# ------------
alias zshconfig="nano ~/.zshrc"


# Alias: Applications
# -------------------
alias firefox="open -a 'Firefox Developer Edition'"
alias chrome="open -a 'Google Chrome'"
alias safari="open -a 'Safari'"


# Utilities
# ---------

# AdoptOpenJDK (Homebrew cask)
# Switch between JDK versions
# Usage: jdk 11
# (NB for JDK version 8: jdk 1.8)
jdk() {
    version=$1
    # shellcheck disable=SC2155
    export JAVA_HOME=$(/usr/libexec/java_home -v"$version");
    java -version
}

# Mozilla Developer Network (MDN) search
# $1: Search term
# $2 (optional): topic area, e.g. html
mdn() {
    MDN_URL="https://developer.mozilla.org/en-US/"
    QUERY="${1:-}"
    TOPIC="${2:-}"
    url="$MDN_URL"
    if [[ -n "$QUERY" ]]; then
        url="${url}search?q=${QUERY}"
        if [[ -n "$TOPIC" ]]; then
            url="${url}&topic=${TOPIC}"
        fi
    fi
    firefox "${url}"
}

# Jump to projects directory (uncomment when needed)
# prj() {
#     [ -z "$1" ] && echo "** Jump to Projects directory **"
#     cd ~/YOUR_PROJECTS_DIRECTORY/$1
#     echo "Project directory: $(pwd)"
#     if [ -z "$1" ]
#     then
#         ls -a
#     fi
# }

# Launch AEM instance (uncomment when needed)
# aem() {
#     echo "** Starting local AEM 6.5 Author instance **"
#     cd ~/Adobe/AEM6.5/Author/
#     jdk 11
#     java -Xmx1024M -jar AEM6.5-author-p4502.jar
# }


# NVM: Automatically execute `.nvmrc` file settings when navigating directories
# - Runs `nvm install` or `nvm use`
# - https://github.com/nvm-sh/nvm#zsh
# - Place this after nvm initialization!
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc
